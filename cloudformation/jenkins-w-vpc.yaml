Description: >
    Manuel Castellin <manuel@castellinconsulting.com> / Udacity DevOps Capstone Project
    Creates AWS resources to deploy a Jenkins automation server on AWS

Parameters:
  EnvironmentName:
    Description: An environment name that will be prefixed to resources
    Type: String
        
  VpcCIDR:
    Description: The IP range (CIDR notation) for this VPC
    Type: String
    
  PublicSubnet1CIDR:
    Description: The IP range (CIDR notation) for this Subnet
    Type: String
    
  KeyPairName:
    Description: The name of the key pair used to access Jenkins via SSH
    Type: String

Resources:
  VPC:
    Type: AWS::EC2::VPC
    Properties: 
      CidrBlock: !Ref VpcCIDR
      EnableDnsHostnames: true
      Tags:
      - Key: Name
        Value: !Ref EnvironmentName

  InternetGateway:
    Type: AWS::EC2::InternetGateway
    Properties: 
      Tags:
      - Key: Name
        Value: !Ref EnvironmentName
                  
  InternetGatewayAttachment:
    Type: AWS::EC2::VPCGatewayAttachment
    Properties:
      InternetGatewayId: !Ref InternetGateway
      VpcId: !Ref VPC

  PublicSubnet1:
    Type: AWS::EC2::Subnet
    Properties:
      VpcId: !Ref VPC
      AvailabilityZone: !Select [ 0, !GetAZs '' ]
      CidrBlock: !Ref PublicSubnet1CIDR 
      MapPublicIpOnLaunch: true
      Tags:
      - Key: Name
        Value: !Sub ${EnvironmentName} Public Subnet (AZ1)
                  
  NatGateway1EIP:
    Type: AWS::EC2::EIP
    DependsOn: InternetGatewayAttachment
    Properties:
      Domain: vpc

  NatGateway1:
    Type: AWS::EC2::NatGateway
    Properties:
      AllocationId: !GetAtt NatGateway1EIP.AllocationId
      SubnetId: !Ref PublicSubnet1

  PublicRouteTable:
    Type: AWS::EC2::RouteTable
    Properties:
      VpcId: !Ref VPC
      Tags:
      - Key: Name
        Value: !Sub ${EnvironmentName} Public Routes

  DefaultPublicRoute:
    Type: AWS::EC2::Route
    DependsOn: InternetGatewayAttachment
    Properties: 
      RouteTableId: !Ref PublicRouteTable
      DestinationCidrBlock: 0.0.0.0/0
      GatewayId: !Ref InternetGateway
    
  PublicSubnet1RouteTableAssociation:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties: 
      RouteTableId: !Ref PublicRouteTable
      SubnetId: !Ref PublicSubnet1

  EC2AdmSecGroup:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: Allow access to EC2 instances for administrative purposes
      VpcId: !Ref VPC
      SecurityGroupIngress:
        - IpProtocol: tcp
          FromPort: 22
          ToPort: 22
          CidrIp: 0.0.0.0/0
    
  JenkinsSecGroup:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: Http access to Jenkins automation server
      VpcId: !Ref VPC
      SecurityGroupIngress:
        - IpProtocol: tcp
          FromPort: 8080
          ToPort: 8080
          CidrIp: 0.0.0.0/0
          
  JenkinsControlInterface:
    Type: AWS::EC2::NetworkInterface
    Properties:
      Description: A network interface for administraction traffic to k8s instances
      SubnetId: !Ref PublicSubnet1 
      GroupSet:
        - Ref: EC2AdmSecGroup
        - Ref: JenkinsSecGroup

  JenkinsEIP:
    Type: AWS::EC2::EIP
    Properties:
      Domain: vpc

  JenkinsEIPAssociation:
    Type: AWS::EC2::EIPAssociation
    Properties:
      AllocationId: !GetAtt JenkinsEIP.AllocationId
      NetworkInterfaceId: !Ref JenkinsControlInterface

  Jenkins:
    Type: AWS::EC2::Instance
    Description: An EC2 instance with a JenkinsCI master
    Properties:
      UserData:
        Fn::Base64: 
          Fn::Join:
            - |+

            - - '#!/bin/bash -ex'
              - apt update && apt install default-jdk git -y
              - curl -fsSL https://get.docker.com -o get-docker.sh
              - sh get-docker.sh
              - usermod -aG docker ubuntu
              - wget -q -O - https://pkg.jenkins.io/debian/jenkins.io.key | apt-key add -
              - sh -c 'echo deb http://pkg.jenkins.io/debian-stable binary/ > /etc/apt/sources.list.d/jenkins.list'
              - apt update && apt install jenkins -y
              - usermod -aG docker jenkins
      ImageId: ami-0d1cd67c26f5fca19
      KeyName: !Ref KeyPairName
      InstanceType: t2.micro
      BlockDeviceMappings:
        - DeviceName: "/dev/sda1"
          Ebs:
            VolumeSize: '20'
      NetworkInterfaces:
        - NetworkInterfaceId: !Ref JenkinsControlInterface
          DeviceIndex: 0
      Tags:
        - Key: Name
          Value: !Sub "${EnvironmentName}-Jenkins"

Outputs: 
  VPC: 
    Description: A reference to the created VPC
    Value: !Ref VPC
    Export:
      Name: !Sub ${EnvironmentName}-VPCID
            
  PublicSubnets:
    Description: A list of the public subnets
    Value: !Join [",", [!Ref PublicSubnet1]]
    Export:
      Name: !Sub ${EnvironmentName}-PUB-NETS
            
  PublicSubnet1:
    Description: The public subnet in AZ1
    Value: !Ref PublicSubnet1
    Export:
      Name: !Sub ${EnvironmentName}-PUB1-SN

  JenkinsConnectionString:
    Description: The connection string to ssh into the Jenkins instance
    Value: !Join
      - ''
      - - 'ssh -i ~/.ssh/pipeline.pem ubuntu@'
        - !GetAtt 
            - Jenkins
            - PublicIp
    Export:
      Name: !Sub ${EnvironmentName}-SSH-Connstring

  JenkinsInitialAdminPassword:
    Description: A command to get the initial admin password for Jenkins
    Value: !Join
      - ''
      - - 'ssh -i ~/.ssh/pipeline.pem ubuntu@'
        - !GetAtt 
            - Jenkins
            - PublicIp
        - ' "sudo cat /var/lib/jenkins/secrets/initialAdminPassword"'
    Export:
      Name: !Sub ${EnvironmentName}-InitPassword

  JenkinsURL:
    Description: The URL to connect to JenkinsCI console
    Value: !Join
      - ''
      - - 'http://'
        - !GetAtt 
            - Jenkins
            - PublicIp
        - ':8080/'
    Export:
      Name: !Sub ${EnvironmentName}-URL
